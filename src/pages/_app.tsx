import type { AppProps } from "next/app";
import Head from "next/head";
import { Provider } from "react-redux";

import { wrapper } from "@/redux/store";
import { Api } from "@/utils/api";
import { setUserData } from "@/redux/user/slice";

import "@/styles/style.scss";

const App = ({ Component, ...rest }: AppProps) => {
  const { store, props } = wrapper.useWrappedStore(rest);

  return (
    <>
      <Head>
        <title>NeoCode | Форум</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
        <link
          rel="stylesheet"
          href="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.1/build/styles/atom-one-dark.min.css"
        />
      </Head>

      <Provider store={store}>
        <Component {...props.pageProps} />
      </Provider>
    </>
  );
};

App.getInitialProps = wrapper.getInitialAppProps(
  (store) =>
    async ({ ctx, Component }) => {
      try {
        const userData = await Api(ctx).user.getProfile();
        store.dispatch(setUserData(userData));
      } catch (err) {
        console.log("Error Authorization");
      }

      return {
        pageProps: Component.getInitialProps
          ? await Component.getInitialProps({ ...ctx, store })
          : {},
      };
    }
);

export default App;
